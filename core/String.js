exports.fromCodePoints = c => String.fromCodePoint.apply(String, c);
exports.toCodePoints = s => Array.from(s).map(c => c.codePointAt(0));
exports.join = s => a => a.join(s);
exports.padStart = n => c => s => s.padStart(n, c);
exports.padEnd = n => c => s => s.padEnd(n, c);
exports.repeat = n => s => s.repeat(n);
exports.replace = i => o => s => s.replace(i, o);
exports.startsWith = x => s => s.startsWith(x);
exports.endsWith = x => s => s.endsWith(x);
exports.split = x => s => s.split(x);
exports.at = i => s => s.charAt(i);
exports.size = s => s.length;
exports.includes = x => s => s.includes(x);
exports.slice = a => b => s => s.slice(a, b);
exports.take = i => s => s.slice(0, i);
exports.drop = i => s => s.slice(i);
exports.trim = s => s.trim();
exports.toUpper = s => s.toUpperCase();
exports.toLower = s => s.toLowerCase();
exports.toInt = i => parseInt(i, 10);
exports.fromInt = i => "" + i;
exports.toIntBase = b => i => parseInt(i, b);
exports.fromIntBase = b => i => i.toString(b);
exports.split = r => s => s.split(r);
exports.lines = s => s.split("\n");
